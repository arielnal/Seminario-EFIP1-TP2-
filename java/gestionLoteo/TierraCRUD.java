/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gestionLoteo;

import conexionBD.Conexion;
import inicioMain.seminarioEFIP1.MenuJF;
import inicioMain.seminarioEFIP1.Lotequen;

import java.awt.Color;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author ariel
 */
public class TierraCRUD extends javax.swing.JFrame {
    
    public TierraCRUD() {
        initComponents();
        setTitle("Tierra " + Lotequen.user);
        jLabel1.setText("Tierra");
        jLabel6.setText("Acceso " + Lotequen.user);
        indiceJT.setEnabled(false);
        this.setLocationRelativeTo(null);
         MostrarLotes(jTable1);
    }

    public void SeleccionarDatos(JTable tablaTierra, JTextField id, JTextField desCatastro,
            JTextField nombre, JTextField cantParcela) {

        try {
            int fila = tablaTierra.getSelectedRow();

            if (fila >= 0) {
                id.setText(tablaTierra.getValueAt(fila, 0).toString());
                desCatastro.setText(tablaTierra.getValueAt(fila, 1).toString());
                nombre.setText(tablaTierra.getValueAt(fila, 2).toString());
                cantParcela.setText(tablaTierra.getValueAt(fila, 3).toString());
            } else {
                JOptionPane.showMessageDialog(null, "Fila no seleccionada: Tabla de Tierras");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error de selección: Tabla de Tierras " + e);

        }
    }

    public void MostrarLotes(JTable tablaTierra) {

        this.jTable1 = tablaTierra;

        Conexion cn = new Conexion();
        String consulta = "";
        DefaultTableModel modelo = new DefaultTableModel();
        String[] datosConsulta = new String[4];
        Statement st;

        //ordeno tabla
        TableRowSorter<TableModel> OrdenarTabla = new TableRowSorter<TableModel>(modelo);
        tablaTierra.setRowSorter(OrdenarTabla);

        //completo la tabla conlos encabezados
        modelo.addColumn("ID");
        modelo.addColumn("Parcela");
        modelo.addColumn("Catastro");
        modelo.addColumn("Nombre");

        //lleno la tabla con el modelo creado
        tablaTierra.setModel(modelo);

        consulta = "select * from tierra;";

        try {
            st = cn.getConection().createStatement();
            ResultSet rs = st.executeQuery(consulta);

            while (rs.next()) {
                datosConsulta[0] = rs.getString(1);
                datosConsulta[1] = rs.getString(2);
                datosConsulta[2] = rs.getString(3);
                datosConsulta[3] = rs.getString(4);

                modelo.addRow(datosConsulta);
            }
            tablaTierra.setModel(modelo);

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "No se pueden mostrar registros: Tabla de Tierras");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        descCatastro = new javax.swing.JTextField();
        nomTierra = new javax.swing.JTextField();
        cantParcela = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        indiceJT = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        jLabel2.setText("Descripcion Catastro:");

        jLabel3.setText("Nombre:");

        jLabel4.setText("Cantidad de Parcelas:");

        jButton1.setText("Regresar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Crear Registro");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton3.setText("Modificar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Eliminar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel5.setText("Índice");

        indiceJT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                indiceJTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(cantParcela, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(indiceJT, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(86, 86, 86)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(nomTierra, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(descCatastro, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(descCatastro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(nomTierra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(cantParcela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(indiceJT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addContainerGap(60, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        MenuJF menu = new MenuJF();
        menu.setVisible(true);
        this.dispose();   
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        //es necesario convertir el textfield a string, para guardarlo como int.
        String csParcela, noTierra, catastro;
        int parcela;
        int validacion = 0;

        noTierra = nomTierra.getText().trim();
        catastro = descCatastro.getText().trim();
        csParcela = cantParcela.getText().trim();

        /*        trr.setNombre(nomTierra.getText().trim());
        trr.setCatastro(descCatastro.getText().trim());

        trr.setParcela(Integer.parseInt(csParcela));
         */
        // valida que los casilleros no estén vacíos
        if (catastro.equals("")) {
            descCatastro.setBackground(Color.red);
            validacion++;
        }
        if (noTierra.equals("")) {
            nomTierra.setBackground(Color.red);
            validacion++;
        }
        if (csParcela.equals("")) {
            cantParcela.setBackground(Color.red);
            validacion++;
        }
        //valida si ya fue registrada la tierra, nuevamente si escribo esto para cada clase, no llegaría con los tiempos.      
        try {
            Conexion con = new Conexion();
            Statement st = con.getConection().createStatement();
            String consulta = "select nombre from tierra where Nombre = '"
                    + noTierra + "';";
            ResultSet rs = st.executeQuery(consulta);

            if (rs.next()) {
                String nombre = rs.getString("nombre");
                if (nombre.equalsIgnoreCase(noTierra)) {
                    nomTierra.setBackground(Color.red);
                    JOptionPane.showMessageDialog(null, "El nombre dela tierra no se encuantra disponible");
                }
            } else {
                st.close();
                if (validacion == 0) {
                    //evita errores al validar datos
                    parcela = Integer.parseInt(csParcela);
                    try {
                        Conexion cx = new Conexion();
                        String insert = "insert into tierra (Parcela, catastro, nombre) values "
                                + "(?,?,?);";
                        CallableStatement cs = cx.getConection().prepareCall(insert);

                        cs.setInt(1, parcela);
                        cs.setString(2, catastro);
                        cs.setString(3, noTierra);
                        cs.execute();
                        LimpiarCasilleros();
                        nomTierra.setBackground(Color.green);
                        MostrarLotes(jTable1);
                        JOptionPane.showMessageDialog(null, "Registro exitoso!");
                    } catch (SQLException e) {/**/
                        System.err.println("Error en el registro de terreno." + e);
                        JOptionPane.showMessageDialog(null, "Error, contacte al administrador (terreno) !");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Debe llenar todos los cmapos");
                }
            }

        } catch (SQLException e) {
            System.err.println("Error en validar nombre de terreno " + e);
            JOptionPane.showMessageDialog(null, "Error al comparar terrenos, comuniquese con su administrador");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        String csParcela, noTierra, catastro;
        int parcela, indiceInt;


        indiceInt = Integer.parseInt(indiceJT.getText().trim());
        
        noTierra = nomTierra.getText().trim();
        catastro = descCatastro.getText().trim();
        csParcela = cantParcela.getText().trim();

        parcela = Integer.parseInt(csParcela);
        
        try {
            Conexion cx = new Conexion();
            String update = "update tierra set parcela = ?, catastro = ?,"
                    + " nombre = ? where id_tierra = ?;";
            CallableStatement cs = cx.getConection().prepareCall(update);

            cs.setInt(1, parcela);
            cs.setString(2, catastro);
            cs.setString(3, noTierra);
            cs.setInt(4, indiceInt);
            cs.execute();
            
            LimpiarCasilleros();
            MostrarLotes(jTable1);

            JOptionPane.showMessageDialog(null, "Actualización exitosa!");
        } catch (SQLException e) {
            System.err.println("Error en la modificación del terreno." + e);
            JOptionPane.showMessageDialog(null, "Error, contacte al administrador (terreno) !");
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
        int indiceInt;

        indiceInt = Integer.parseInt(indiceJT.getText().trim());
        
        try {
            Conexion cx = new Conexion();
            String delete = "delete from tierra where id_tierra = ?;";
            CallableStatement cs = cx.getConection().prepareCall(delete);

            cs.setInt(1, indiceInt);
            cs.execute();
            cs.close();
            LimpiarCasilleros();
            MostrarLotes(jTable1);

            JOptionPane.showMessageDialog(null, "Fila eliminada!");
        } catch (SQLException e) {
            System.err.println("Error en la eliminación del terreno." + e);
            JOptionPane.showMessageDialog(null, "Error, contacte al administrador (terreno) !");
        }        
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        int filas;

        int seleccion = jTable1.getSelectedRow();
        descCatastro.setText(jTable1.getValueAt(seleccion, 2).toString());
        nomTierra.setText(jTable1.getValueAt(seleccion, 3).toString());
        cantParcela.setText(jTable1.getValueAt(seleccion, 1).toString());
        indiceJT.setText(jTable1.getValueAt(seleccion, 0).toString());
        filas = seleccion;
    }//GEN-LAST:event_jTable1MouseClicked

    private void indiceJTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_indiceJTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_indiceJTActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TierraCRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TierraCRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TierraCRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TierraCRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TierraCRUD().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cantParcela;
    private javax.swing.JTextField descCatastro;
    private javax.swing.JTextField indiceJT;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField nomTierra;
    // End of variables declaration//GEN-END:variables

    public void LimpiarCasilleros() {
        cantParcela.setText("");
        descCatastro.setText("");
        nomTierra.setText("");
        indiceJT.setText("");
    }

}
